Aspect,"CSS Frameworks (Bootstrap, etc.)",Native CSS Grid (`fr` Units)
Availability,❌ Not supported — frameworks use predefined % or class-based widths,✅ Fully supported in native CSS Grid
Column Width Control,Based on 12-column math (`col-4` = ~33.33%),"`grid-template-columns: 1fr 2fr` gives fluid, proportional control"
Responsiveness,"Requires class combinations and breakpoints (`col-md-6`, `col-lg-4`, etc.)","Uses `auto-fit`, `minmax()`, and `fr` for intrinsic, responsive behavior"
Simplicity,Complex markup to get responsive ratios,One-line declaration handles layout logic elegantly
Customization,Requires utility overrides or custom class definitions,Fully customizable per layout — no class pollution
Use Case Fit,"Good for rigid, consistent layouts with predefined structure","Ideal for flexible, fluid designs that adapt to container or viewport size"
Integration with Tokens,Indirect — requires mapping classes to spacing/width tokens,"Direct — `fr` units can be used with spacing, gaps, and named grid areas"
Layout Power,Linear — mostly one-dimensional (rows),Two-dimensional — supports dynamic rows and columns simultaneously
Learning Curve,"Lower (for basic use), but rigid","Slightly higher, but more expressive and future-proof"
